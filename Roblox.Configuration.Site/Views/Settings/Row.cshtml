@model Roblox.Configuration.Site.Models.Configuration.SettingModel

<tr data-sid="@Model.Id">
    <td>@Model.Id</td>
    <td class="a">
        <div class="btn-group">
            <button type="button" class="settingsEditButton btn btn-primary btn-xs">Edit</button>
            <button type="button" class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">Toggle Dropdown</span>
            </button>
            <ul class="dropdown-menu">
                <li>@Html.ActionLink("Edit", "", null, new { href = "#", @class = "settingsEditButton" })</li>
                <li>@Html.ActionLink("Delete", "", null, new { href = "#", @class = "settingsDeleteButton" })</li>
            </ul>
        </div>
    </td>
    <td class="gt"><div class="gt truncated">@Model.GroupName</div></td>
    <td class="n"><div class="n truncated" title="@Model.Name">@Model.Name</div></td>
    <td class="t">@Model.Type</td>
    <td class="valueCell">
        @* This is here because some genuis decided to use an entire endpoint to get this value, yet also require it to be provided here.*@
        <span class="setting-value" hidden>@Model.Value</span>
        <span class="value truncated @(Model.IsMasked ? "secret" : "")" title="@Model.Value">
            @if (Model.IsMasked)
            {
                @:[value not shown]
            }
            else
            {
                @Model.Value
            }
        </span>
        @if (Model.IsMasked)
        {
            <div class="showSettingDiv">
                <span class="showSettingButton btn btn-default btn-xs pull-right" data-groupname="@Model.GroupName" data-settingname="@Model.Name">Show</span>
            </div>
        }
        <div class="copyValue @(Model.IsMasked ? "masked" : "")">
            <a href="javascript:navigator.clipboard.writeText('@HttpUtility.JavaScriptStringEncode(Model.Value)')" title="@("Copy this:\n " + Model.Value)" class="copyIcon">
                <span class="copyToClipboardIcon" />
            </a>
        </div>
    </td>
    <td class="c"><div class="truncated" title="@Model.Comment">@Model.Comment</div></td>
    <td>@Model.LastModified</td>
</tr>